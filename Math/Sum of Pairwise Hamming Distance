Problem Description

Hamming distance between two non-negative integers is defined as the number of positions at which the corresponding bits are different.

Given an array A of N non-negative integers, find the sum of hamming distances of all pairs of integers in the array. Return the answer modulo 1000000007.



Problem Constraints
1 <= |A| <= 200000

1 <= A[i] <= 109



Input Format
First and only argument is array A.



Output Format
Return one integer, the answer to the problem.



Example Input
Input 1:

 A = [1]
Input 2:

 A = [2, 4, 6]


Example Output
Output 1:

 0
Output 2:

 8


Example Explanation
Explanation 1:

 No pairs are formed.
Explanation 2:

 We return, f(2, 2) + f(2, 4) + f(2, 6) + f(4, 2) + f(4, 4) + f(4, 6) + f(6, 2) + f(6, 4) + f(6, 6) = 8

<_______________________________________________________________________________________________________________>
SOLUTION:

int Solution::hammingDistance(const vector<int> &A) {

int bit_idx = 0;
int num_idx = 0;
unsigned long long int total_sum = 0, ones = 0, zero = 0;

for (bit_idx = 0; bit_idx < 32; bit_idx++)
{
    ones = 0;
    zero = 0;

    for (num_idx = 0; num_idx < A.size(); num_idx++)
    {
        if (A[num_idx] < 0)
            continue;
        if (1 == A.size())
            break;    
        if ((A[num_idx] >> bit_idx) & 1)
        {
            ones++;
        }
        else
        {
            zero++;
        }
    }
    total_sum += (ones * zero);
}

return ((total_sum * 2)%(1000000007));

}
